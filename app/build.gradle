plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
apply plugin: 'com.google.firebase.crashlytics'


loadExtraProperties "${rootDir}/signing.properties"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.vaskevicius.android.joky"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        //comment out this whole 'signingConfigs' to bypass signing errors

        release project.hasProperty('RELEASE_STORE_FILE') ? {
            storeFile rootProject.file("${rootDir}/${RELEASE_STORE_FILE}")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        } : {}

        debug project.hasProperty('DEBUG_STORE_FILE') ? {
            storeFile rootProject.file("${rootDir}/${DEBUG_STORE_FILE}")
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        } : {}
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            buildConfigField "String", "BASE_URL", "\"https://v2.jokeapi.dev/joke/\""
            buildConfigField "String", "PREF_NAME", "\"joky_preferences\""
            debuggable true
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://v2.jokeapi.dev/joke/\""
            buildConfigField "String", "PREF_NAME", "\"joky_preferences\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    //firebase
    implementation platform('com.google.firebase:firebase-bom:26.4.0')
    //crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    //cloud messaging
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-installations-ktx:16.3.4'


    // Added Dependencies
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'com.amitshekhar.android:rx2-android-networking:1.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def loadExtraProperties(String fileName) {
    if (new File(fileName).exists()) {
        def props = new Properties()
        props.load(new FileInputStream(fileName))

        props.each { key, val -> project.ext.set(key, val)
        }
    }
}
apply plugin: 'com.google.gms.google-services'